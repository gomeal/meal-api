// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: meal/v1/meal.proto

package meal_v1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Запрос для поиска блюд по различным критериям
// Поддерживает фильтрацию по названию, категории, кухне, ингредиентам и времени приготовления
type SearchMealsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Поисковый запрос по названию блюда (необязательный)
	// Пример: "pasta", "chicken soup"
	Query string `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	// ID категории блюда (необязательный)
	// Например: 1 для "Beef", 2 для "Chicken", 3 для "Dessert"
	CategoryId *int32 `protobuf:"varint,2,opt,name=category_id,json=categoryId,proto3,oneof" json:"category_id,omitempty"`
	// ID типа кухни (необязательный)
	// Например: 1 для "Italian", 2 для "Chinese", 3 для "Mexican"
	CuisineId *int32 `protobuf:"varint,3,opt,name=cuisine_id,json=cuisineId,proto3,oneof" json:"cuisine_id,omitempty"`
	// ID ингредиентов которые ДОЛЖНЫ присутствовать в блюде
	// Например: [15, 23, 45] для ["chicken", "garlic", "onion"]
	IncludeIngredientIds []int32 `protobuf:"varint,4,rep,packed,name=include_ingredient_ids,json=includeIngredientIds,proto3" json:"include_ingredient_ids,omitempty"`
	// ID ингредиентов которые НЕ должны присутствовать в блюде
	// Например: [78, 92, 156] для ["nuts", "dairy", "gluten"]
	ExcludeIngredientIds []int32 `protobuf:"varint,5,rep,packed,name=exclude_ingredient_ids,json=excludeIngredientIds,proto3" json:"exclude_ingredient_ids,omitempty"`
	// Максимальное время приготовления в минутах (необязательный)
	// Если не указано, то без ограничений по времени
	MaxCookingTimeMinutes *int32 `protobuf:"varint,6,opt,name=max_cooking_time_minutes,json=maxCookingTimeMinutes,proto3,oneof" json:"max_cooking_time_minutes,omitempty"`
	// Пагинация: размер страницы (по умолчанию 20)
	PageSize int32 `protobuf:"varint,7,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Пагинация: номер страницы (начинается с 1)
	Page          int32 `protobuf:"varint,8,opt,name=page,proto3" json:"page,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchMealsRequest) Reset() {
	*x = SearchMealsRequest{}
	mi := &file_meal_v1_meal_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchMealsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchMealsRequest) ProtoMessage() {}

func (x *SearchMealsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_meal_v1_meal_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchMealsRequest.ProtoReflect.Descriptor instead.
func (*SearchMealsRequest) Descriptor() ([]byte, []int) {
	return file_meal_v1_meal_proto_rawDescGZIP(), []int{0}
}

func (x *SearchMealsRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *SearchMealsRequest) GetCategoryId() int32 {
	if x != nil && x.CategoryId != nil {
		return *x.CategoryId
	}
	return 0
}

func (x *SearchMealsRequest) GetCuisineId() int32 {
	if x != nil && x.CuisineId != nil {
		return *x.CuisineId
	}
	return 0
}

func (x *SearchMealsRequest) GetIncludeIngredientIds() []int32 {
	if x != nil {
		return x.IncludeIngredientIds
	}
	return nil
}

func (x *SearchMealsRequest) GetExcludeIngredientIds() []int32 {
	if x != nil {
		return x.ExcludeIngredientIds
	}
	return nil
}

func (x *SearchMealsRequest) GetMaxCookingTimeMinutes() int32 {
	if x != nil && x.MaxCookingTimeMinutes != nil {
		return *x.MaxCookingTimeMinutes
	}
	return 0
}

func (x *SearchMealsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *SearchMealsRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

// Ответ на запрос поиска блюд
// Содержит найденные блюда и метаданные для пагинации
type SearchMealsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Найденные блюда
	Meals []*Meal `protobuf:"bytes,1,rep,name=meals,proto3" json:"meals,omitempty"`
	// Общее количество найденных блюд (для пагинации)
	TotalCount int32 `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	// Номер текущей страницы
	Page int32 `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	// Размер страницы
	PageSize int32 `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Есть ли следующая страница
	HasNextPage   bool `protobuf:"varint,5,opt,name=has_next_page,json=hasNextPage,proto3" json:"has_next_page,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchMealsResponse) Reset() {
	*x = SearchMealsResponse{}
	mi := &file_meal_v1_meal_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchMealsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchMealsResponse) ProtoMessage() {}

func (x *SearchMealsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_meal_v1_meal_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchMealsResponse.ProtoReflect.Descriptor instead.
func (*SearchMealsResponse) Descriptor() ([]byte, []int) {
	return file_meal_v1_meal_proto_rawDescGZIP(), []int{1}
}

func (x *SearchMealsResponse) GetMeals() []*Meal {
	if x != nil {
		return x.Meals
	}
	return nil
}

func (x *SearchMealsResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *SearchMealsResponse) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchMealsResponse) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *SearchMealsResponse) GetHasNextPage() bool {
	if x != nil {
		return x.HasNextPage
	}
	return false
}

// Представление блюда с полной информацией
// Включает основные данные, категорию, кухню, ингредиенты и медиа-контент
type Meal struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Уникальный идентификатор блюда в нашей БД
	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// Внешний идентификатор из TheMealDB (например: "52977")
	ExternalId string `protobuf:"bytes,2,opt,name=external_id,json=externalId,proto3" json:"external_id,omitempty"`
	// Название блюда
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// Инструкции по приготовлению
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	// URL изображения блюда
	ImageUrl string `protobuf:"bytes,5,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
	// Информация о категории блюда
	Category *Category `protobuf:"bytes,6,opt,name=category,proto3" json:"category,omitempty"`
	// Информация о типе кухни
	Cuisine *Cuisine `protobuf:"bytes,7,opt,name=cuisine,proto3" json:"cuisine,omitempty"`
	// Теги блюда (например: ["spicy", "quick", "healthy"])
	Tags []string `protobuf:"bytes,8,rep,name=tags,proto3" json:"tags,omitempty"`
	// Ингредиенты с количеством
	Ingredients []*MealIngredient `protobuf:"bytes,9,rep,name=ingredients,proto3" json:"ingredients,omitempty"`
	// Время приготовления в минутах
	// Может быть 0 если неизвестно
	CookingTimeMinutes int32 `protobuf:"varint,10,opt,name=cooking_time_minutes,json=cookingTimeMinutes,proto3" json:"cooking_time_minutes,omitempty"`
	// URL видео с блюдом (если есть)
	VideoUrl      *string `protobuf:"bytes,11,opt,name=video_url,json=videoUrl,proto3,oneof" json:"video_url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Meal) Reset() {
	*x = Meal{}
	mi := &file_meal_v1_meal_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Meal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Meal) ProtoMessage() {}

func (x *Meal) ProtoReflect() protoreflect.Message {
	mi := &file_meal_v1_meal_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Meal.ProtoReflect.Descriptor instead.
func (*Meal) Descriptor() ([]byte, []int) {
	return file_meal_v1_meal_proto_rawDescGZIP(), []int{2}
}

func (x *Meal) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Meal) GetExternalId() string {
	if x != nil {
		return x.ExternalId
	}
	return ""
}

func (x *Meal) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Meal) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Meal) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *Meal) GetCategory() *Category {
	if x != nil {
		return x.Category
	}
	return nil
}

func (x *Meal) GetCuisine() *Cuisine {
	if x != nil {
		return x.Cuisine
	}
	return nil
}

func (x *Meal) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *Meal) GetIngredients() []*MealIngredient {
	if x != nil {
		return x.Ingredients
	}
	return nil
}

func (x *Meal) GetCookingTimeMinutes() int32 {
	if x != nil {
		return x.CookingTimeMinutes
	}
	return 0
}

func (x *Meal) GetVideoUrl() string {
	if x != nil && x.VideoUrl != nil {
		return *x.VideoUrl
	}
	return ""
}

// Категория блюда (например, мясные блюда, десерты, супы)
// Используется для классификации и фильтрации блюд
type Category struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID категории
	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// Название категории (например: "Beef", "Chicken", "Dessert")
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Описание категории (необязательное)
	Description   *string `protobuf:"bytes,3,opt,name=description,proto3,oneof" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Category) Reset() {
	*x = Category{}
	mi := &file_meal_v1_meal_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Category) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Category) ProtoMessage() {}

func (x *Category) ProtoReflect() protoreflect.Message {
	mi := &file_meal_v1_meal_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Category.ProtoReflect.Descriptor instead.
func (*Category) Descriptor() ([]byte, []int) {
	return file_meal_v1_meal_proto_rawDescGZIP(), []int{3}
}

func (x *Category) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Category) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Category) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

// Тип кухни мира (например, итальянская, китайская, мексиканская)
// Определяет кулинарную традицию и стиль приготовления блюда
type Cuisine struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID кухни
	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// Название кухни (например: "Italian", "Chinese", "Mexican")
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Описание кухни (необязательное)
	Description   *string `protobuf:"bytes,3,opt,name=description,proto3,oneof" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Cuisine) Reset() {
	*x = Cuisine{}
	mi := &file_meal_v1_meal_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Cuisine) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cuisine) ProtoMessage() {}

func (x *Cuisine) ProtoReflect() protoreflect.Message {
	mi := &file_meal_v1_meal_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cuisine.ProtoReflect.Descriptor instead.
func (*Cuisine) Descriptor() ([]byte, []int) {
	return file_meal_v1_meal_proto_rawDescGZIP(), []int{4}
}

func (x *Cuisine) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Cuisine) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Cuisine) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

// Ингредиент блюда с количеством и позицией в рецепте
// Содержит информацию о том, что и в каком количестве нужно для приготовления
type MealIngredient struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID ингредиента
	IngredientId int32 `protobuf:"varint,1,opt,name=ingredient_id,json=ingredientId,proto3" json:"ingredient_id,omitempty"`
	// Название ингредиента
	IngredientName string `protobuf:"bytes,2,opt,name=ingredient_name,json=ingredientName,proto3" json:"ingredient_name,omitempty"`
	// Количество и единица измерения
	// Примеры: "2 cups", "500g", "1 tsp", "to taste"
	Measure string `protobuf:"bytes,3,opt,name=measure,proto3" json:"measure,omitempty"`
	// Позиция в списке ингредиентов (для правильного порядка)
	Position      int32 `protobuf:"varint,4,opt,name=position,proto3" json:"position,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MealIngredient) Reset() {
	*x = MealIngredient{}
	mi := &file_meal_v1_meal_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MealIngredient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MealIngredient) ProtoMessage() {}

func (x *MealIngredient) ProtoReflect() protoreflect.Message {
	mi := &file_meal_v1_meal_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MealIngredient.ProtoReflect.Descriptor instead.
func (*MealIngredient) Descriptor() ([]byte, []int) {
	return file_meal_v1_meal_proto_rawDescGZIP(), []int{5}
}

func (x *MealIngredient) GetIngredientId() int32 {
	if x != nil {
		return x.IngredientId
	}
	return 0
}

func (x *MealIngredient) GetIngredientName() string {
	if x != nil {
		return x.IngredientName
	}
	return ""
}

func (x *MealIngredient) GetMeasure() string {
	if x != nil {
		return x.Measure
	}
	return ""
}

func (x *MealIngredient) GetPosition() int32 {
	if x != nil {
		return x.Position
	}
	return 0
}

// Запрос на добавление блюда в избранное пользователя
// Создает связь между пользователем и выбранным блюдом
type AddToFavoritesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID пользователя (UUID)
	// Пример: "550e8400-e29b-41d4-a716-446655440000"
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// ID блюда которое нужно добавить в избранное
	MealId        int32 `protobuf:"varint,2,opt,name=meal_id,json=mealId,proto3" json:"meal_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddToFavoritesRequest) Reset() {
	*x = AddToFavoritesRequest{}
	mi := &file_meal_v1_meal_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddToFavoritesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddToFavoritesRequest) ProtoMessage() {}

func (x *AddToFavoritesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_meal_v1_meal_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddToFavoritesRequest.ProtoReflect.Descriptor instead.
func (*AddToFavoritesRequest) Descriptor() ([]byte, []int) {
	return file_meal_v1_meal_proto_rawDescGZIP(), []int{6}
}

func (x *AddToFavoritesRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AddToFavoritesRequest) GetMealId() int32 {
	if x != nil {
		return x.MealId
	}
	return 0
}

// Ответ на добавление блюда в избранное
// Возвращает идентификатор созданной записи в таблице избранных
type AddToFavoritesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID записи в таблице user_favorites
	FavoriteId    int32 `protobuf:"varint,1,opt,name=favorite_id,json=favoriteId,proto3" json:"favorite_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddToFavoritesResponse) Reset() {
	*x = AddToFavoritesResponse{}
	mi := &file_meal_v1_meal_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddToFavoritesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddToFavoritesResponse) ProtoMessage() {}

func (x *AddToFavoritesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_meal_v1_meal_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddToFavoritesResponse.ProtoReflect.Descriptor instead.
func (*AddToFavoritesResponse) Descriptor() ([]byte, []int) {
	return file_meal_v1_meal_proto_rawDescGZIP(), []int{7}
}

func (x *AddToFavoritesResponse) GetFavoriteId() int32 {
	if x != nil {
		return x.FavoriteId
	}
	return 0
}

// Запрос на получение списка избранных блюд пользователя
// Поддерживает пагинацию для больших списков избранного
type GetFavoritesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID пользователя (UUID)
	// Пример: "550e8400-e29b-41d4-a716-446655440000"
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// Пагинация: размер страницы
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Пагинация: номер страницы (начинается с 1)
	Page          int32 `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFavoritesRequest) Reset() {
	*x = GetFavoritesRequest{}
	mi := &file_meal_v1_meal_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFavoritesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFavoritesRequest) ProtoMessage() {}

func (x *GetFavoritesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_meal_v1_meal_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFavoritesRequest.ProtoReflect.Descriptor instead.
func (*GetFavoritesRequest) Descriptor() ([]byte, []int) {
	return file_meal_v1_meal_proto_rawDescGZIP(), []int{8}
}

func (x *GetFavoritesRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetFavoritesRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetFavoritesRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

// Ответ со списком избранных блюд пользователя
// Включает полную информацию о блюдах и метаданные избранного
type GetFavoritesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Список избранных блюд с информацией о когда добавлено
	FavoriteMeals []*FavoriteMeal `protobuf:"bytes,1,rep,name=favorite_meals,json=favoriteMeals,proto3" json:"favorite_meals,omitempty"`
	// Общее количество избранных блюд (для пагинации)
	TotalCount int32 `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	// Номер текущей страницы
	Page int32 `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	// Размер страницы
	PageSize int32 `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Есть ли следующая страница
	HasNextPage   bool `protobuf:"varint,5,opt,name=has_next_page,json=hasNextPage,proto3" json:"has_next_page,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFavoritesResponse) Reset() {
	*x = GetFavoritesResponse{}
	mi := &file_meal_v1_meal_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFavoritesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFavoritesResponse) ProtoMessage() {}

func (x *GetFavoritesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_meal_v1_meal_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFavoritesResponse.ProtoReflect.Descriptor instead.
func (*GetFavoritesResponse) Descriptor() ([]byte, []int) {
	return file_meal_v1_meal_proto_rawDescGZIP(), []int{9}
}

func (x *GetFavoritesResponse) GetFavoriteMeals() []*FavoriteMeal {
	if x != nil {
		return x.FavoriteMeals
	}
	return nil
}

func (x *GetFavoritesResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *GetFavoritesResponse) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetFavoritesResponse) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetFavoritesResponse) GetHasNextPage() bool {
	if x != nil {
		return x.HasNextPage
	}
	return false
}

// Избранное блюдо с дополнительными метаданными
// Содержит полную информацию о блюде и данные о добавлении в избранное
type FavoriteMeal struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID записи в таблице user_favorites (для возможного удаления)
	FavoriteId int32 `protobuf:"varint,1,opt,name=favorite_id,json=favoriteId,proto3" json:"favorite_id,omitempty"`
	// Полная информация о блюде
	Meal *Meal `protobuf:"bytes,2,opt,name=meal,proto3" json:"meal,omitempty"`
	// Когда блюдо было добавлено в избранное (ISO 8601 формат)
	// Пример: "2024-01-15T10:30:00Z"
	AddedAt       string `protobuf:"bytes,3,opt,name=added_at,json=addedAt,proto3" json:"added_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FavoriteMeal) Reset() {
	*x = FavoriteMeal{}
	mi := &file_meal_v1_meal_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FavoriteMeal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FavoriteMeal) ProtoMessage() {}

func (x *FavoriteMeal) ProtoReflect() protoreflect.Message {
	mi := &file_meal_v1_meal_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FavoriteMeal.ProtoReflect.Descriptor instead.
func (*FavoriteMeal) Descriptor() ([]byte, []int) {
	return file_meal_v1_meal_proto_rawDescGZIP(), []int{10}
}

func (x *FavoriteMeal) GetFavoriteId() int32 {
	if x != nil {
		return x.FavoriteId
	}
	return 0
}

func (x *FavoriteMeal) GetMeal() *Meal {
	if x != nil {
		return x.Meal
	}
	return nil
}

func (x *FavoriteMeal) GetAddedAt() string {
	if x != nil {
		return x.AddedAt
	}
	return ""
}

// Запрос на генерацию списка покупок
// Принимает список блюд и создает агрегированный список необходимых ингредиентов
type GenerateShoppingListRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID блюд для которых нужно составить список покупок
	// Минимум одно блюдо должно быть указано
	MealIds       []int32 `protobuf:"varint,1,rep,packed,name=meal_ids,json=mealIds,proto3" json:"meal_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GenerateShoppingListRequest) Reset() {
	*x = GenerateShoppingListRequest{}
	mi := &file_meal_v1_meal_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerateShoppingListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateShoppingListRequest) ProtoMessage() {}

func (x *GenerateShoppingListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_meal_v1_meal_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateShoppingListRequest.ProtoReflect.Descriptor instead.
func (*GenerateShoppingListRequest) Descriptor() ([]byte, []int) {
	return file_meal_v1_meal_proto_rawDescGZIP(), []int{11}
}

func (x *GenerateShoppingListRequest) GetMealIds() []int32 {
	if x != nil {
		return x.MealIds
	}
	return nil
}

// Ответ со списком покупок
// Содержит агрегированные ингредиенты из всех выбранных блюд
type GenerateShoppingListResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Агрегированный список ингредиентов для покупки
	Items []*ShoppingListItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	// Общее количество уникальных ингредиентов
	TotalItemsCount int32 `protobuf:"varint,2,opt,name=total_items_count,json=totalItemsCount,proto3" json:"total_items_count,omitempty"`
	// Количество блюд в списке покупок
	MealsCount    int32 `protobuf:"varint,3,opt,name=meals_count,json=mealsCount,proto3" json:"meals_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GenerateShoppingListResponse) Reset() {
	*x = GenerateShoppingListResponse{}
	mi := &file_meal_v1_meal_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerateShoppingListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateShoppingListResponse) ProtoMessage() {}

func (x *GenerateShoppingListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_meal_v1_meal_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateShoppingListResponse.ProtoReflect.Descriptor instead.
func (*GenerateShoppingListResponse) Descriptor() ([]byte, []int) {
	return file_meal_v1_meal_proto_rawDescGZIP(), []int{12}
}

func (x *GenerateShoppingListResponse) GetItems() []*ShoppingListItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *GenerateShoppingListResponse) GetTotalItemsCount() int32 {
	if x != nil {
		return x.TotalItemsCount
	}
	return 0
}

func (x *GenerateShoppingListResponse) GetMealsCount() int32 {
	if x != nil {
		return x.MealsCount
	}
	return 0
}

// Элемент списка покупок
// Представляет один ингредиент с агрегированной информацией из всех блюд
type ShoppingListItem struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID ингредиента
	IngredientId int32 `protobuf:"varint,1,opt,name=ingredient_id,json=ingredientId,proto3" json:"ingredient_id,omitempty"`
	// Название ингредиента
	IngredientName string `protobuf:"bytes,2,opt,name=ingredient_name,json=ingredientName,proto3" json:"ingredient_name,omitempty"`
	// Список всех количеств этого ингредиента из разных блюд
	// Примеры: ["2 cups", "500g", "1 tsp"]
	Measures []string `protobuf:"bytes,3,rep,name=measures,proto3" json:"measures,omitempty"`
	// В каких блюдах используется этот ингредиент (названия блюд)
	UsedInMeals   []string `protobuf:"bytes,4,rep,name=used_in_meals,json=usedInMeals,proto3" json:"used_in_meals,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ShoppingListItem) Reset() {
	*x = ShoppingListItem{}
	mi := &file_meal_v1_meal_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShoppingListItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShoppingListItem) ProtoMessage() {}

func (x *ShoppingListItem) ProtoReflect() protoreflect.Message {
	mi := &file_meal_v1_meal_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShoppingListItem.ProtoReflect.Descriptor instead.
func (*ShoppingListItem) Descriptor() ([]byte, []int) {
	return file_meal_v1_meal_proto_rawDescGZIP(), []int{13}
}

func (x *ShoppingListItem) GetIngredientId() int32 {
	if x != nil {
		return x.IngredientId
	}
	return 0
}

func (x *ShoppingListItem) GetIngredientName() string {
	if x != nil {
		return x.IngredientName
	}
	return ""
}

func (x *ShoppingListItem) GetMeasures() []string {
	if x != nil {
		return x.Measures
	}
	return nil
}

func (x *ShoppingListItem) GetUsedInMeals() []string {
	if x != nil {
		return x.UsedInMeals
	}
	return nil
}

var File_meal_v1_meal_proto protoreflect.FileDescriptor

const file_meal_v1_meal_proto_rawDesc = "" +
	"\n" +
	"\x12meal/v1/meal.proto\x12\ameal.v1\x1a\x17validate/validate.proto\"\xe6\x03\n" +
	"\x12SearchMealsRequest\x12\x1d\n" +
	"\x05query\x18\x01 \x01(\tB\a\xfaB\x04r\x02\x18dR\x05query\x12-\n" +
	"\vcategory_id\x18\x02 \x01(\x05B\a\xfaB\x04\x1a\x02(\x01H\x00R\n" +
	"categoryId\x88\x01\x01\x12+\n" +
	"\n" +
	"cuisine_id\x18\x03 \x01(\x05B\a\xfaB\x04\x1a\x02(\x01H\x01R\tcuisineId\x88\x01\x01\x12D\n" +
	"\x16include_ingredient_ids\x18\x04 \x03(\x05B\x0e\xfaB\v\x92\x01\b\x10\n" +
	"\"\x04\x1a\x02(\x01R\x14includeIngredientIds\x12D\n" +
	"\x16exclude_ingredient_ids\x18\x05 \x03(\x05B\x0e\xfaB\v\x92\x01\b\x10\n" +
	"\"\x04\x1a\x02(\x01R\x14excludeIngredientIds\x12H\n" +
	"\x18max_cooking_time_minutes\x18\x06 \x01(\x05B\n" +
	"\xfaB\a\x1a\x05\x18\xd8\x04(\x01H\x02R\x15maxCookingTimeMinutes\x88\x01\x01\x12&\n" +
	"\tpage_size\x18\a \x01(\x05B\t\xfaB\x06\x1a\x04\x18d(\x01R\bpageSize\x12\x1b\n" +
	"\x04page\x18\b \x01(\x05B\a\xfaB\x04\x1a\x02(\x01R\x04pageB\x0e\n" +
	"\f_category_idB\r\n" +
	"\v_cuisine_idB\x1b\n" +
	"\x19_max_cooking_time_minutes\"\xb0\x01\n" +
	"\x13SearchMealsResponse\x12#\n" +
	"\x05meals\x18\x01 \x03(\v2\r.meal.v1.MealR\x05meals\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\x12\x12\n" +
	"\x04page\x18\x03 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x04 \x01(\x05R\bpageSize\x12\"\n" +
	"\rhas_next_page\x18\x05 \x01(\bR\vhasNextPage\"\x96\x03\n" +
	"\x04Meal\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12\x1f\n" +
	"\vexternal_id\x18\x02 \x01(\tR\n" +
	"externalId\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x12\x1b\n" +
	"\timage_url\x18\x05 \x01(\tR\bimageUrl\x12-\n" +
	"\bcategory\x18\x06 \x01(\v2\x11.meal.v1.CategoryR\bcategory\x12*\n" +
	"\acuisine\x18\a \x01(\v2\x10.meal.v1.CuisineR\acuisine\x12\x12\n" +
	"\x04tags\x18\b \x03(\tR\x04tags\x129\n" +
	"\vingredients\x18\t \x03(\v2\x17.meal.v1.MealIngredientR\vingredients\x120\n" +
	"\x14cooking_time_minutes\x18\n" +
	" \x01(\x05R\x12cookingTimeMinutes\x12 \n" +
	"\tvideo_url\x18\v \x01(\tH\x00R\bvideoUrl\x88\x01\x01B\f\n" +
	"\n" +
	"_video_url\"e\n" +
	"\bCategory\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12%\n" +
	"\vdescription\x18\x03 \x01(\tH\x00R\vdescription\x88\x01\x01B\x0e\n" +
	"\f_description\"d\n" +
	"\aCuisine\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12%\n" +
	"\vdescription\x18\x03 \x01(\tH\x00R\vdescription\x88\x01\x01B\x0e\n" +
	"\f_description\"\x94\x01\n" +
	"\x0eMealIngredient\x12#\n" +
	"\ringredient_id\x18\x01 \x01(\x05R\fingredientId\x12'\n" +
	"\x0fingredient_name\x18\x02 \x01(\tR\x0eingredientName\x12\x18\n" +
	"\ameasure\x18\x03 \x01(\tR\ameasure\x12\x1a\n" +
	"\bposition\x18\x04 \x01(\x05R\bposition\"\\\n" +
	"\x15AddToFavoritesRequest\x12!\n" +
	"\auser_id\x18\x01 \x01(\tB\b\xfaB\x05r\x03\xb0\x01\x01R\x06userId\x12 \n" +
	"\ameal_id\x18\x02 \x01(\x05B\a\xfaB\x04\x1a\x02(\x01R\x06mealId\"9\n" +
	"\x16AddToFavoritesResponse\x12\x1f\n" +
	"\vfavorite_id\x18\x01 \x01(\x05R\n" +
	"favoriteId\"}\n" +
	"\x13GetFavoritesRequest\x12!\n" +
	"\auser_id\x18\x01 \x01(\tB\b\xfaB\x05r\x03\xb0\x01\x01R\x06userId\x12&\n" +
	"\tpage_size\x18\x02 \x01(\x05B\t\xfaB\x06\x1a\x04\x18d(\x01R\bpageSize\x12\x1b\n" +
	"\x04page\x18\x03 \x01(\x05B\a\xfaB\x04\x1a\x02(\x01R\x04page\"\xca\x01\n" +
	"\x14GetFavoritesResponse\x12<\n" +
	"\x0efavorite_meals\x18\x01 \x03(\v2\x15.meal.v1.FavoriteMealR\rfavoriteMeals\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\x12\x12\n" +
	"\x04page\x18\x03 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x04 \x01(\x05R\bpageSize\x12\"\n" +
	"\rhas_next_page\x18\x05 \x01(\bR\vhasNextPage\"m\n" +
	"\fFavoriteMeal\x12\x1f\n" +
	"\vfavorite_id\x18\x01 \x01(\x05R\n" +
	"favoriteId\x12!\n" +
	"\x04meal\x18\x02 \x01(\v2\r.meal.v1.MealR\x04meal\x12\x19\n" +
	"\badded_at\x18\x03 \x01(\tR\aaddedAt\"J\n" +
	"\x1bGenerateShoppingListRequest\x12+\n" +
	"\bmeal_ids\x18\x01 \x03(\x05B\x10\xfaB\r\x92\x01\n" +
	"\b\x01\x102\"\x04\x1a\x02(\x01R\amealIds\"\x9c\x01\n" +
	"\x1cGenerateShoppingListResponse\x12/\n" +
	"\x05items\x18\x01 \x03(\v2\x19.meal.v1.ShoppingListItemR\x05items\x12*\n" +
	"\x11total_items_count\x18\x02 \x01(\x05R\x0ftotalItemsCount\x12\x1f\n" +
	"\vmeals_count\x18\x03 \x01(\x05R\n" +
	"mealsCount\"\xa0\x01\n" +
	"\x10ShoppingListItem\x12#\n" +
	"\ringredient_id\x18\x01 \x01(\x05R\fingredientId\x12'\n" +
	"\x0fingredient_name\x18\x02 \x01(\tR\x0eingredientName\x12\x1a\n" +
	"\bmeasures\x18\x03 \x03(\tR\bmeasures\x12\"\n" +
	"\rused_in_meals\x18\x04 \x03(\tR\vusedInMeals2\xdd\x02\n" +
	"\fMealsService\x12H\n" +
	"\vSearchMeals\x12\x1b.meal.v1.SearchMealsRequest\x1a\x1c.meal.v1.SearchMealsResponse\x12Q\n" +
	"\x0eAddToFavorites\x12\x1e.meal.v1.AddToFavoritesRequest\x1a\x1f.meal.v1.AddToFavoritesResponse\x12K\n" +
	"\fGetFavorites\x12\x1c.meal.v1.GetFavoritesRequest\x1a\x1d.meal.v1.GetFavoritesResponse\x12c\n" +
	"\x14GenerateShoppingList\x12$.meal.v1.GenerateShoppingListRequest\x1a%.meal.v1.GenerateShoppingListResponseB2Z0github.com/gomeal/meal-api/proto/meal/v1;meal_v1b\x06proto3"

var (
	file_meal_v1_meal_proto_rawDescOnce sync.Once
	file_meal_v1_meal_proto_rawDescData []byte
)

func file_meal_v1_meal_proto_rawDescGZIP() []byte {
	file_meal_v1_meal_proto_rawDescOnce.Do(func() {
		file_meal_v1_meal_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_meal_v1_meal_proto_rawDesc), len(file_meal_v1_meal_proto_rawDesc)))
	})
	return file_meal_v1_meal_proto_rawDescData
}

var file_meal_v1_meal_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_meal_v1_meal_proto_goTypes = []any{
	(*SearchMealsRequest)(nil),           // 0: meal.v1.SearchMealsRequest
	(*SearchMealsResponse)(nil),          // 1: meal.v1.SearchMealsResponse
	(*Meal)(nil),                         // 2: meal.v1.Meal
	(*Category)(nil),                     // 3: meal.v1.Category
	(*Cuisine)(nil),                      // 4: meal.v1.Cuisine
	(*MealIngredient)(nil),               // 5: meal.v1.MealIngredient
	(*AddToFavoritesRequest)(nil),        // 6: meal.v1.AddToFavoritesRequest
	(*AddToFavoritesResponse)(nil),       // 7: meal.v1.AddToFavoritesResponse
	(*GetFavoritesRequest)(nil),          // 8: meal.v1.GetFavoritesRequest
	(*GetFavoritesResponse)(nil),         // 9: meal.v1.GetFavoritesResponse
	(*FavoriteMeal)(nil),                 // 10: meal.v1.FavoriteMeal
	(*GenerateShoppingListRequest)(nil),  // 11: meal.v1.GenerateShoppingListRequest
	(*GenerateShoppingListResponse)(nil), // 12: meal.v1.GenerateShoppingListResponse
	(*ShoppingListItem)(nil),             // 13: meal.v1.ShoppingListItem
}
var file_meal_v1_meal_proto_depIdxs = []int32{
	2,  // 0: meal.v1.SearchMealsResponse.meals:type_name -> meal.v1.Meal
	3,  // 1: meal.v1.Meal.category:type_name -> meal.v1.Category
	4,  // 2: meal.v1.Meal.cuisine:type_name -> meal.v1.Cuisine
	5,  // 3: meal.v1.Meal.ingredients:type_name -> meal.v1.MealIngredient
	10, // 4: meal.v1.GetFavoritesResponse.favorite_meals:type_name -> meal.v1.FavoriteMeal
	2,  // 5: meal.v1.FavoriteMeal.meal:type_name -> meal.v1.Meal
	13, // 6: meal.v1.GenerateShoppingListResponse.items:type_name -> meal.v1.ShoppingListItem
	0,  // 7: meal.v1.MealsService.SearchMeals:input_type -> meal.v1.SearchMealsRequest
	6,  // 8: meal.v1.MealsService.AddToFavorites:input_type -> meal.v1.AddToFavoritesRequest
	8,  // 9: meal.v1.MealsService.GetFavorites:input_type -> meal.v1.GetFavoritesRequest
	11, // 10: meal.v1.MealsService.GenerateShoppingList:input_type -> meal.v1.GenerateShoppingListRequest
	1,  // 11: meal.v1.MealsService.SearchMeals:output_type -> meal.v1.SearchMealsResponse
	7,  // 12: meal.v1.MealsService.AddToFavorites:output_type -> meal.v1.AddToFavoritesResponse
	9,  // 13: meal.v1.MealsService.GetFavorites:output_type -> meal.v1.GetFavoritesResponse
	12, // 14: meal.v1.MealsService.GenerateShoppingList:output_type -> meal.v1.GenerateShoppingListResponse
	11, // [11:15] is the sub-list for method output_type
	7,  // [7:11] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_meal_v1_meal_proto_init() }
func file_meal_v1_meal_proto_init() {
	if File_meal_v1_meal_proto != nil {
		return
	}
	file_meal_v1_meal_proto_msgTypes[0].OneofWrappers = []any{}
	file_meal_v1_meal_proto_msgTypes[2].OneofWrappers = []any{}
	file_meal_v1_meal_proto_msgTypes[3].OneofWrappers = []any{}
	file_meal_v1_meal_proto_msgTypes[4].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_meal_v1_meal_proto_rawDesc), len(file_meal_v1_meal_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_meal_v1_meal_proto_goTypes,
		DependencyIndexes: file_meal_v1_meal_proto_depIdxs,
		MessageInfos:      file_meal_v1_meal_proto_msgTypes,
	}.Build()
	File_meal_v1_meal_proto = out.File
	file_meal_v1_meal_proto_goTypes = nil
	file_meal_v1_meal_proto_depIdxs = nil
}
